# L2 HMM Trading System Environment Variables

# Dashboard Feature Flags - Legacy and Cutover Control
# =================================================================
# These flags control the dashboard interface transition from legacy to cockpit

# DISABLE_LEGACY_DASHBOARD: When true, completely removes legacy dashboard access
# Forces TradingCockpit as the only interface. Use during cutover after rollout testing.
# Default: false (legacy still accessible)
DISABLE_LEGACY_DASHBOARD=false

# USE_LEGACY: When true, shows legacy dashboard instead of cockpit
# Primarily used for rollback testing and emergency reversion during cutover.
# Even when DISABLE_LEGACY_DASHBOARD=true, this flag enables immediate rollback.
# Default: false (shows new cockpit)
USE_LEGACY=false

# Rollback Procedure (1 minute during cutover):
# 1. Set USE_LEGACY=true (while keeping DISABLE_LEGACY_DASHBOARD=true)
# 2. Restart application - legacy dashboard reappears
# 3. For full rollback: Set DISABLE_LEGACY_DASHBOARD=false, USE_LEGACY=true

# Trading Mode
# Set to "live" to enable live trading safeguards (quantity caps, analytics overlays)
# Default is "paper" (unlimited quantities, no live overlays)
TRADING_MODE=paper
LIVE_QTY_CAP=10

# Trading System Core
NODE_ENV=production
INGEST_KEY=CHANGE_ME

# IBKR Configuration (Paper Trading)
IBKR_HOST=127.0.0.1
IBKR_PORT=7497
IBKR_CLIENT_ID=1
IBKR_PAPER_TRADING=true

# ML Service Configuration
ML_MODEL_PATH=/app/models
ML_DATA_PATH=/app/data
ML_HOST=0.0.0.0
ML_PORT=8000

# Algorithm Service Configuration
ALGO_HOST=0.0.0.0
ALGO_PORT=8001
ALGO_STRATEGIES_PATH=/app/strategies
ALGO_DATA_PATH=/app/data

# Broker Bridge Configuration
BROKER_HOST=0.0.0.0
BROKER_PORT=8002

# Blotter Service Configuration
BLOTTER_HOST=0.0.0.0
BLOTTER_PORT=8003

# SSE and Streaming Configuration
SSE_MAX_CONNECTIONS=1000
SSE_BUFFER_SIZE=8192
SSE_TIMEOUT=30

# Database/Storage (if needed)
DB_HOST=localhost
DB_PORT=5432
DB_NAME=l2_trading
DB_USER=trading_user
DB_PASSWORD=CHANGE_ME

# Observability
LOG_LEVEL=info
METRICS_ENABLED=true
HEALTH_CHECK_INTERVAL=30

# Security
CORS_ORIGINS=http://localhost:3000,http://localhost
JWT_SECRET=CHANGE_ME_IN_PRODUCTION
API_KEY=CHANGE_ME_IN_PRODUCTION

# Backup and Alert System Configuration
# ===================================

# Alert Webhooks (primary and fallback for redundancy)
ALERT_WEBHOOK_URL=
ALERT_WEBHOOK_FALLBACK=
ALERT_WEBHOOK_SECRET=
ALERT_ENV=staging

# Alert Buffering (when webhooks unavailable)
ALERT_BUFFER_FILE=/tmp/alerts_buffer.jsonl
MAX_BUFFER_SIZE=1000
ALERT_LOG_FILE=/tmp/alerts.log

# Backup Configuration
BACKUP_SRC_MODELS=/data/models
BACKUP_SRC_LOGS=/data/logs
BACKUP_SRC_REPORTS=/data/reports
BACKUP_SRC_CONFIGS=/data/configs

# Local backup storage
BACKUP_LOCAL_DIR=/backups
BACKUP_RETENTION_LOCAL_DAYS=3

# Remote backup storage (S3/MinIO)
BACKUP_BUCKET=
BACKUP_PREFIX=snapshots
S3_ENDPOINT=
S3_REGION=us-east-1
S3_FORCE_PATH_STYLE=true

# Backup scheduling
BACKUP_DAILY_HOUR=02

# Remote backup retention
BACKUP_RETENTION_REMOTE_DAYS=90

# Health Monitoring Configuration
# ==============================

# SSE staleness thresholds (seconds)
SSE_UI_STALE_SEC=60
SSE_SERVICE_STALE_SEC=15

# Health check thresholds
HEALTH_FAIL_THRESHOLD=3
LAT_P95_LIMIT_MS=200
LAT_BREACH_WINDOWS=2

# Health monitoring state files
SSE_STATE_FILE=/tmp/sse_state.json
HEALTH_STATE_FILE=/tmp/health_state.json
