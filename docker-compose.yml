version: '3.8'

services:
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/logs:/var/log/nginx
    depends_on:
      - dashboard
      - ml-service
      - algo
      - broker-bridge
      - blotter
    restart: unless-stopped

  dashboard:
    build: .
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
    env_file:
      - .env
    depends_on:
      ml-service:
        condition: service_healthy
      algo:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    restart: unless-stopped

  ml-service:
    build: ./ml-service
    ports:
      - "8000:8000"
    env_file:
      - .env
    volumes:
      - ./ml-service/models:/app/models
      - ./data:/app/data
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    restart: unless-stopped

  algo:
    build: ./services/algo
    ports:
      - "8001:8001"
    env_file:
      - .env
    depends_on:
      ml-service:
        condition: service_healthy
    volumes:
      - ./strategies:/app/strategies
      - ./data:/app/data
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8001/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    restart: unless-stopped

  broker-bridge:
    build: ./services/broker
    ports:
      - "8002:8002"
    env_file:
      - .env
    environment:
      - IBKR_PAPER_TRADING=true
    depends_on:
      algo:
        condition: service_healthy
    volumes:
      - ./data:/app/data
    healthcheck:
      test: ["CMD", "python", "-c", "import requests; requests.get('http://localhost:8002/health')"]
      interval: 30s
      timeout: 10s
      retries: 3
    restart: unless-stopped

  blotter:
    build: ./services/blotter
    ports:
      - "8003:8003"
    env_file:
      - .env
    depends_on:
      broker-bridge:
        condition: service_healthy
    volumes:
      - ./data:/app/data
    healthcheck:
      test: ["CMD", "python", "-c", "import requests; requests.get('http://localhost:8003/health')"]
      interval: 30s
      timeout: 10s
      retries: 3
    restart: unless-stopped

  cron:
    build: ./ops/cron
    env_file:
      - .env
    volumes:
      - ./data:/data:ro
      - backups:/backups
      - ./sessions:/sessions:ro
    depends_on:
      dashboard:
        condition: service_healthy
      ml-service:
        condition: service_healthy
      algo:
        condition: service_healthy
      broker-bridge:
        condition: service_healthy
      blotter:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "echo", "cron service active"]
      interval: 60s
      timeout: 10s
      retries: 3
    restart: unless-stopped

volumes:
  nginx-logs:
  models-data:
  strategies-data:
  backups:
